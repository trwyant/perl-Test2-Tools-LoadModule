0.000_012	2020-01-23	T. R. Wyant
    Add options to load_module_*(). These are the same options as
    available for import, and are provided because the hints mechanism
    does not work before Perl 5.10.0.

0.000_011	2020-01-22	T. R. Wyant
    Replace -load-errors with --load_error=...  where the value is a
    sprintf-style format (to be used verbatim), any other true value
    (which is equivalent to specifying '%s'), or any false value (to
    suppress output of $@).

    Add require_ok(), use_ok().

    Go back to a regex to recognize version numbers, for the sake of
    lightening dependencies.

0.000_010	2020-01-20	T. R. Wyant
    Make the diagnostics argument an array, rather than an array
    reference. This is to be consistent with at least the majority of
    the tools in Test2-Suite, with the side effect of making parsing the
    argument lists easier.

    Redo skip tests in terms of events.

    Options to import() and unimport() are now parsed in POSIX mode,
    meaning that they need to come first. This way I could also allow
    the same options to subroutines if I desire -- though so far I do
    not.

0.000_009	2020-01-15	T. R. Wyant
    Add load_module_or_skip(), load_module_p_or_skip()

0.000_008	2020-01-15	T. R. Wyant
    Remove -perl-import-semantics. Instead, each of the original
    load_module_* subroutines got a load_module_p_* sibling that uses
    Perl import semantics.

    Add -load-errors "pseudo-pragma", default true. This controls
    whether or not $@ is appended to the diagnostics for a test failure.

0.000_007	2020-01-14	T. R. Wyant
    Convert xt/ tests to use Test2::Tools::LoadModule so that I can use
    load_module_or_skip_all(). Those that needed access to a test
    framework got Test2::V0 in place of Test::More.

    Fix bug in -perl-import-semantics.  I was looking the wrong place on
    the scope stack.

    Add Getopt::Long as dependency (ooops!)

0.000_006	2020-01-14	T. R. Wyant
    Add -perl-import-semantics export/pragma.
    This makes the $import argument behave like the import list of the use()
    built-in. It behaves like a pragma in that it is invoked by the use()
    and no() built-ins, and that it has lexical scope.

    Validate version numbers.

0.000_005	2020-01-13	T. R. Wyant
    Change semantics of import list. I decided that the module would be
    easier to use if I broke with the semantics of use(). Instead, undef
    now specifies no import whatsoever, and a reference to an empty
    array specifies the default import.

    Ditch require_* and use_* modules.

0.000_004	2020-01-13	T. R. Wyant
    Add load_module_ok(), load_module_or_skip_all(). The intent is to
    remove require_module_ok(), use_module_ok(), and
    use_module_or_skip_all().

0.000_003	2020-01-12	T. R. Wyant
    Refactor module loading.

    Correct t/use_or_skip_all.t. It should fail when a skip is generated
    when it should not be.

    In use_module_or_skip_all(), only get context if skipping, so that
    we don't initialize the test system if the load succeeds. This
    limits noisiness when loading modules that use other test
    frameworks, e.g. Test::Perl::Critic.

0.000_002	2020-01-12	T. R. Wyant
    Remove -EE for $@ in require_module_ok(). Instead, $@ is always
    appended to the diagnostics.

    Add use_module_or_skip_all(). This is not a test; it has the same
    signature as use_module_ok(), but if either load or import fail it
    issues a skip_all().

0.000_001	2020-01-11	T. R. Wyant
    Initial internal release
