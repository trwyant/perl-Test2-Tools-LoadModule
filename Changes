0.000_007	2020-01-14	T. R. Wyant
    Convert xt/ tests to use Test2::Tools::LoadModule so that I can use
    load_module_or_skip_all(). Those that needed access to a test
    framework got Test2::V0 in place of Test::More.

    Fix bug in -perl-import-semantics.  I was looking the wrong place on
    the scope stack.

    Add Getopt::Long as dependency (ooops!)

0.000_006	2020-01-14	T. R. Wyant
    Add -perl-import-semantics export/pragma.
    This makes the $import argument behave like the import list of the use()
    built-in. It behaves like a pragma in that it is invoked by the use()
    and no() built-ins, and that it has lexical scope.

    Validate version numbers.

0.000_005	2020-01-13	T. R. Wyant
    Change semantics of import list. I decided that the module would be
    easier to use if I broke with the semantics of use(). Instead, undef
    now specifies no import whatsoever, and a reference to an empty
    array specifies the default import.

    Ditch require_* and use_* modules.

0.000_004	2020-01-13	T. R. Wyant
    Add load_module_ok(), load_module_or_skip_all(). The intent is to
    remove require_module_ok(), use_module_ok(), and
    use_module_or_skip_all().

0.000_003	2020-01-12	T. R. Wyant
    Refactor module loading.

    Correct t/use_or_skip_all.t. It should fail when a skip is generated
    when it should not be.

    In use_module_or_skip_all(), only get context if skipping, so that
    we don't initialize the test system if the load succeeds. This
    limits noisiness when loading modules that use other test
    frameworks, e.g. Test::Perl::Critic.

0.000_002	2020-01-12	T. R. Wyant
    Remove -EE for $@ in require_module_ok(). Instead, $@ is always
    appended to the diagnostics.

    Add use_module_or_skip_all(). This is not a test; it has the same
    signature as use_module_ok(), but if either load or import fail it
    issues a skip_all().

0.000_001	2020-01-11	T. R. Wyant
    Initial internal release
